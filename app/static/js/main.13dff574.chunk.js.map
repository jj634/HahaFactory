{"version":3,"sources":["images/operator.png","images/size.js","images/maturity.js","components/Form.js","components/JokeResults.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","split","JokeForm","props","handleChange","e","name","value","setState","handleAdvanced","titleProps","newActive","state","isOpen","createDropDownList","list","map","element","key","text","isLoaded","cat_options","categories","search","score","sizes","maturity","displayMessage","handleSubmit","bind","this","cat_empty","length","score_empty","maturity_empty","size_empty","open","axios","method","url","then","response","data","catch","err","console","log","event","preventDefault","params","URLSearchParams","search_empty","append","forEach","cat","size","toString","history","push","pathname","categoryList","sizeList","maturityList","maturities","slider_settings","start","min","max","step","onChange","icon","Form","onSubmit","Input","placeholder","label","type","defaultValue","clearable","Accordion","Title","onClick","Icon","Dropdown","closeOnChange","multiple","selection","options","Group","widths","Field","discrete","color","settings","style","inline","justifyContent","alignItems","Button","secondary","primary","React","Component","withRouter","JokeResults","jokes","query_spaced","query","item","i","Fragment","joke","index","className","highlightClassName","searchWords","autoEscape","textToHighlight","Label","Popup","content","position","trigger","Rating","precision","readOnly","Number","similarity","toFixed","hoverable","Header","Content","labels","datasets","backgroundColor","hoverBackgroundColor","cos_score","jac_score","sc_score","legend","display","fontSize","App","typo","typo_query","fetchResults","URLParams","window","location","category_param","getAll","score_param","get","search_param","size_param","maturity_param","prevProps","Container","Row","Col","margin","src","logo","alt","Dimmer","active","inverted","Loader","nextProps","prevState","cat_updated","sort","size_updated","Boolean","hostname","match","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.13dff574.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/operator.23ba0e19.png\";","export default `One-Liner\r\nShort\r\nMedium\r\nLong`.split('\\n');","export default `PG\r\nPG-13`.split('\\n');","import React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Form, Accordion, Icon } from 'semantic-ui-react'\r\nimport { Slider } from \"react-semantic-ui-range\";\r\nimport sizes from '../images/size';\r\nimport maturities from '../images/maturity'\r\n\r\nclass JokeForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoaded: false, // indicates if categories have been loaded from API GET request\r\n            cat_options: [],\r\n\r\n            categories: this.props.categories || [],\r\n            search: this.props.search || '',\r\n            score: this.props.score || '',\r\n            sizes: this.props.sizes || [],\r\n            maturity: this.props.maturity || '',\r\n\r\n            displayMessage: false, \r\n            isOpen: false\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleAdvanced= this.handleAdvanced.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {categories, score, sizes, maturity } = this.state\r\n        const cat_empty = categories === null || categories.length === 0\r\n        const score_empty = score === null || score === \"\"\r\n        const maturity_empty = maturity === null || maturity === \"\"\r\n        const size_empty = sizes === null || sizes.length === 0\r\n\r\n        const open = !cat_empty || !score_empty || !maturity_empty || !size_empty\r\n        \r\n        axios({\r\n            method: 'GET',\r\n            // url: `/api/cat-options`,\r\n            url: `http://localhost:5000/api/cat-options`,\r\n        })\r\n            .then((response) => {\r\n                this.setState({\r\n                    cat_options: response.data.categories,\r\n                    isLoaded: true,\r\n                    isOpen:open\r\n                })\r\n            })\r\n            .catch(err =>\r\n                console.log(err)\r\n            );\r\n    }\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { search, categories, score, sizes, maturity} = this.state\r\n\r\n        const params = new URLSearchParams()\r\n\r\n        const search_empty = search === null || search === \"\"\r\n        const cat_empty = categories === null || categories.length === 0\r\n        const score_empty = score === null || score === \"\"\r\n        const maturity_empty = maturity === null || maturity === \"\"\r\n        const size_empty = sizes === null || sizes.length === 0\r\n\r\n        if ((search_empty && cat_empty && size_empty) && (!score_empty || !maturity_empty)) {\r\n            this.setState({\r\n                displayMessage: true\r\n            })\r\n        } else {\r\n            if (!search_empty) params.append(\"search\", search)\r\n            if (!cat_empty) {\r\n                categories.forEach(cat => {\r\n                    params.append(\"categories\", cat);\r\n                })\r\n            }\r\n            if (!score_empty) params.append(\"score\", score)\r\n            if (!maturity_empty) params.append(\"maturity\", maturity)\r\n            if (!size_empty) {\r\n                sizes.forEach(size => {\r\n                    params.append(\"sizes\", size);\r\n                })\r\n            }\r\n\r\n            const url = '?' + params.toString()\r\n            this.props.history.push({\r\n                pathname: '/',\r\n                search: url\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAdvanced= (e, titleProps) => {\r\n        const { isOpen } = this.state\r\n        const newActive = !isOpen\r\n        this.setState({ isOpen: newActive })\r\n    }\r\n\r\n    createDropDownList = (list) => {\r\n        return list.map((element) =>\r\n            ({\r\n                key: element,\r\n                text: element,\r\n                value: element\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const categoryList = this.createDropDownList(this.state.cat_options)\r\n        const sizeList = this.createDropDownList(sizes)\r\n        const maturityList = this.createDropDownList(maturities)\r\n\r\n        const slider_settings = {\r\n            start: this.props.score || 0.25,\r\n            min: 0,\r\n            max: 0.5,\r\n            step: 0.125,\r\n            onChange: value => {\r\n                this.setState({\r\n                    score: value\r\n                })\r\n            }\r\n        };\r\n\r\n        const icon = this.state.isOpen ? 'chevron down' : 'chevron right'\r\n        \r\n        return (\r\n            <Form onSubmit={this.handleSubmit} size=\"large\" key=\"large\">\r\n                <Form.Input\r\n                    placeholder=\"Enter your search\"\r\n                    name=\"search\"\r\n                    label=\"Keywords\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                    defaultValue={this.props.search}\r\n                    clearable\r\n                />\r\n                < Accordion> \r\n                    <Accordion.Title onClick={this.handleAdvanced}>\r\n                        <Icon name={icon}/>Advanced Search\r\n                    </Accordion.Title>\r\n                </Accordion>\r\n                {this.state.isOpen  \r\n                    ? <div>\r\n                        < Form.Dropdown\r\n                            closeOnChange\r\n                            placeholder=\"Select Categories\"\r\n                            name=\"categories\"\r\n                            label=\"Categories\"\r\n                            multiple\r\n                            search\r\n                            selection\r\n                            options={categoryList}\r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.props.categories}\r\n                            clearable\r\n                        />\r\n\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Field>\r\n                                <p><b>Relevancy       vs.      Funny Factor</b></p>\r\n                                <Slider discrete color=\"white\" settings={slider_settings} />\r\n                            </Form.Field>\r\n\r\n                            <Form.Dropdown\r\n                                placeholder=\"Select Maturity\"\r\n                                name=\"maturity\"\r\n                                label=\"Maturity Rating\"\r\n                                selection\r\n                                clearable\r\n                                options={maturityList}\r\n                                onChange={this.handleChange}\r\n                                defaultValue={this.props.maturity}\r\n                            />\r\n\r\n                            <Form.Dropdown\r\n                                placeholder=\"Select Joke Length\"\r\n                                name=\"sizes\"\r\n                                label=\"Joke Length\"\r\n                                selection\r\n                                clearable\r\n                                multiple\r\n                                options={sizeList}\r\n                                onChange={this.handleChange}\r\n                                defaultValue={this.props.sizes}\r\n                            />\r\n                        </Form.Group>\r\n                    </div> \r\n                    : null \r\n                }\r\n                {this.state.displayMessage\r\n                    ?\r\n                    <h5 style={{ color: 'black' }}>Please provide an input for \"Keywords\", \"Categories\" or \"Joke Length\" to search.</h5>\r\n                    : null\r\n                }\r\n\r\n                <Form.Group inline style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Form.Button  secondary type=\"submit\" size=\"large\">Find Jokes</Form.Button>\r\n                    <Form.Button primary type=\"submit\" size=\"large\">I'm Feeling Funny!</Form.Button>\r\n                </Form.Group>\r\n            </Form >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(JokeForm);\r\n","// adapted from: https://pusher.com/tutorials/consume-restful-api-react\r\n\r\nimport React from 'react'\r\nimport { Icon, Label, Popup, Button } from 'semantic-ui-react'\r\nimport Highlighter from \"react-highlight-words\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst JokeResults = ({ jokes, query }) => {\r\n\r\n  const query_spaced = query.map((item, i) => item +\" \")\r\n\r\n  if (jokes.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <center><h2>Jokes</h2></center>\r\n      {jokes.map((joke, index) => (\r\n        (index <= 20) ?\r\n        <div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            {joke.text.split('\\n').map((item, i) => <h5 key={i}> <Highlighter\r\n              highlightClassName=\"Highlight\"\r\n              searchWords={query_spaced}\r\n              autoEscape={true}\r\n              textToHighlight={item}\r\n            /></h5>)}\r\n            \r\n              {joke.categories.map((cat) => <Label>\r\n                {cat}\r\n              </Label>)}\r\n              <div>\r\n              <Popup content={joke.score} position='right center' trigger={\r\n                <h6 className=\"star_hover\">\r\n                  <Rating className=\"rating_stars\" name=\"half-rating-read\" defaultValue={joke.score} precision={0.1} readOnly />\r\n                </h6>\r\n              }/>\r\n          </div>\r\n\r\n              <h6 className=\"sim_sc_display\">Similarity Score: {Number((Number(joke.similarity)*100).toFixed(1))+ \"%\"}</h6>\r\n              <Popup position='right center' trigger={<Icon className=\"info_icon\" color='teal' name='question circle' size='large' />} hoverable>\r\n                <Popup.Header>Similarity Score Breakdown</Popup.Header>\r\n                  <Popup.Content>\r\n                    <Doughnut\r\n                    data={\r\n                      {\r\n                        labels: ['Keywords (%)', 'Categories (%)', 'Funny Factor (%)'],\r\n                        datasets: [\r\n                          {\r\n                            label: 'breakdown',\r\n                            backgroundColor: [\r\n                              '#FDC144',\r\n                              '#FD6585',\r\n                              '#3DA3E8'\r\n                            ],\r\n                            hoverBackgroundColor: [\r\n                              '#FEDB93',\r\n                              '#FEBCCA',\r\n                              '#3DCEE8'\r\n                            ],\r\n                            data: [\r\n                                    Number((Number(joke.cos_score)/Number(joke.similarity)*100).toFixed(1)), \r\n                                    Number((Number(joke.jac_score)/Number(joke.similarity)*100).toFixed(1)), \r\n                                    Number((Number(joke.sc_score)/Number(joke.similarity)*100).toFixed(1))\r\n                                  ]\r\n                          } \r\n                        ]\r\n                      }\r\n                    }\r\n                    options={{\r\n                      legend:{\r\n                        display:true,\r\n                        position:'right',\r\n                        fontSize: 4\r\n                      }\r\n                    }}\r\n                    />\r\n                  </Popup.Content>\r\n              </Popup>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        </div> : null\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default JokeResults","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n// css files \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/main.css';\r\nimport './css/App.css';\r\n\r\n// images, lists\r\nimport logo from './images/operator.png';\r\n\r\n// components\r\nimport Form from './components/Form'\r\nimport JokeResults from './components/JokeResults';\r\n\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { Dimmer, Loader, Container, Button } from 'semantic-ui-react'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isLoaded: false,\r\n      jokes: [],\r\n      typo: false,\r\n      typo_query: '',\r\n      query: [],\r\n\r\n      categories: [],\r\n      score: '',\r\n      search: '',\r\n      sizes: [],\r\n      maturity: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchResults()\r\n  }\r\n\r\n  fetchResults() {\r\n    const URLParams = new URLSearchParams(window.location.search)\r\n\r\n    const category_param = URLParams.getAll(\"categories\")\r\n    const score_param = URLParams.get(\"score\")\r\n    const search_param = URLParams.get(\"search\")\r\n    const size_param = URLParams.getAll(\"sizes\")\r\n    const maturity_param = URLParams.get(\"maturity\")\r\n\r\n    axios({\r\n      method: 'GET',\r\n      // url: `/api/search`,\r\n      url: `http://localhost:5000/api/search`,\r\n      params: URLParams\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          jokes: response.data.jokes,\r\n          typo: response.data.typo,\r\n          typo_query: response.data.typo_query,\r\n          query: response.data.query,\r\n\r\n          categories: category_param,\r\n          score: score_param,\r\n          search: search_param,\r\n          sizes: size_param,\r\n          maturity: maturity_param,\r\n        })\r\n      })\r\n      .catch(err =>\r\n        console.log(err)\r\n      );\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const URLParams = new URLSearchParams(nextProps.location.search)\r\n\r\n    const category_param = URLParams.getAll(\"categories\")\r\n    const score_param = URLParams.get(\"score\")\r\n    const search_param = URLParams.get(\"search\")\r\n    const size_param = URLParams.getAll(\"sizes\")\r\n    const maturity_param = URLParams.get(\"maturity\")\r\n\r\n    const cat_updated = category_param.sort().toString() !== (prevState.categories).sort().toString()\r\n    const size_updated = size_param.sort().toString() !== (prevState.sizes).sort().toString()\r\n    return cat_updated || score_param !== prevState.score || search_param !== prevState.search || size_updated || maturity_param !== prevState.maturity\r\n      ? { isLoaded: false }\r\n      : null\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.state.isLoaded === false) {\r\n      this.fetchResults();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      return (\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col>\r\n\r\n              <div inline >\r\n                <Button style={{ margin: '10px' }} onClick={ () => window.open(\"http://hahafactory-og.herokuapp.com/\", \"_blank\")}> First Prototype </Button>\r\n                <Button style={{ margin: '10px' }} onClick={() => window.open(\"http://hahafactory-v2.herokuapp.com/\", \"_blank\")}> Second Prototype </Button>\r\n              </div>\r\n              <header className=\"App-header\">\r\n                <h1>HahaFactory:</h1>\r\n                <h2>Finding Hilarious Jokes for You</h2>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n              </header>\r\n\r\n              <Form score={this.state.score} categories={this.state.categories} search={this.state.search} sizes={this.state.sizes} maturity={this.state.maturity} />\r\n\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"jokes-col\">\r\n              {this.state.typo & this.state.typo_query === ''\r\n                ? <div>\r\n                  <h4> We could not find any results for <b>\"{this.state.search}\"</b>.</h4>\r\n                </div>\r\n                : null}\r\n              {this.state.typo & this.state.typo_query !== ''\r\n                ? <div>\r\n                  <h4> Did you mean... <b>\"{this.state.typo_query}\"</b>? </h4>\r\n                  <h4> We are showing results for <b>\"{this.state.typo_query}\"</b>.</h4>\r\n                </div>\r\n                : null}\r\n              <JokeResults jokes={this.state.jokes} query={this.state.query} />           </Col>\r\n          </Row>\r\n        </Container >\r\n      )\r\n    }\r\n    else return (\r\n      <Dimmer active inverted>\r\n        <Loader size=\"large\" >Loading</Loader>\r\n      </Dimmer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} />  \r\n    </Switch>\r\n  </BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}