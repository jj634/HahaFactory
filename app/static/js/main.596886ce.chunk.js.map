{"version":3,"sources":["images/operator.png","images/scores.js","images/size.js","images/maturity.js","components/Form.js","components/JokeResults.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","split","JokeForm","props","handleChange","e","name","value","setState","createDropDownList","list","map","element","key","text","state","isLoaded","cat_options","categories","search","score","size","handleSubmit","bind","axios","method","url","then","response","data","catch","err","console","log","event","preventDefault","this","params","URLSearchParams","append","forEach","cat","toString","history","push","pathname","categoryList","sizeList","scores","sizes","maturityList","maturities","slider_settings","start","min","max","step","onChange","Form","onSubmit","Input","placeholder","label","type","defaultValue","clearable","Dropdown","closeOnChange","multiple","selection","options","Group","widths","Field","discrete","color","settings","inline","Button","center","secondary","primary","React","Component","withRouter","JokeResults","jokes","length","Fragment","joke","index","className","item","i","Label","App","typo","typo_query","fetchResults","URLParams","window","location","category_param","getAll","score_param","get","search_param","size_param","prevProps","Container","Row","Col","src","logo","alt","Dimmer","active","inverted","Loader","nextProps","prevState","sort","Boolean","hostname","match","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.596886ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/operator.23ba0e19.png\";","export default `1\r\n2\r\n3\r\n4\r\n5`.split('\\n');","export default `One-Liner\r\nShort\r\nMedium\r\nLong`.split('\\n');","export default `PG\r\nPG-13\r\nR`.split('\\n');","import React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Form } from 'semantic-ui-react'\r\nimport { Slider } from \"react-semantic-ui-range\";\r\nimport scores from '../images/scores';\r\nimport sizes from '../images/size';\r\nimport maturities from '../images/maturity'\r\n\r\nclass JokeForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoaded: false, // indicates if categories have been loaded from API GET request\r\n            cat_options: [],         \r\n\r\n            categories: this.props.categories || [], \r\n            search: this.props.search || '', \r\n            score: this.props.score || '', \r\n            size: this.props.size || '',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.createDropDownList = this.createDropDownList(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n            axios({\r\n                method: 'GET',\r\n                // url: `/api/cat-options`,\r\n                url: `http://localhost:5000/api/cat-options`,\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    cat_options: response.data.categories, \r\n                    isLoaded: true, \r\n                })\r\n            })\r\n            .catch(err =>\r\n                console.log(err)\r\n            );\r\n    }\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { search, categories, score, size } = this.state\r\n\r\n        const params = new URLSearchParams()\r\n        if (this.state.search != null) params.append(\"search\", search)\r\n\r\n        if (this.state.categories !== null) {\r\n        categories.forEach(cat => {\r\n            params.append(\"categories\", cat);\r\n        })\r\n        }\r\n\r\n        if (this.state.score != null) params.append(\"score\", score)\r\n        if (this.state.size != null) params.append(\"size\", size)\r\n\r\n        const url = '?'+params.toString()\r\n        this.props.history.push({\r\n            pathname: '/',\r\n            search: url\r\n        })\r\n    }\r\n\r\n    createDropDownList = (list) => {\r\n        return list.map((element) =>\r\n            ({\r\n                key: element,\r\n                text: element,\r\n                value: element\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const categoryList = this.createDropDownList(this.state.cat_options)\r\n        const scoreList = this.createDropDownList(scores)\r\n        const sizeList = this.createDropDownList(sizes)\r\n        const maturityList = this.createDropDownList(maturities)\r\n\r\n        const slider_settings = {\r\n            start: 3,\r\n            min: 1,\r\n            max: 5,\r\n            step: 1,\r\n            onChange: value => {\r\n                this.setState({\r\n                    score: value\r\n                })\r\n            }\r\n        };\r\n      \r\n        return (\r\n            <Form onSubmit={this.handleSubmit} size = \"large\" key = \"large\">\r\n                <Form.Input\r\n                    placeholder=\"Enter your search\"\r\n                    name=\"search\"\r\n                    label=\"Keywords\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                    defaultValue={this.props.search} \r\n                    clearable\r\n                />\r\n\r\n                <Form.Dropdown\r\n                    closeOnChange\r\n                    placeholder=\"Select Categories\"\r\n                    name=\"categories\"\r\n                    label=\"Categories\"\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    options={categoryList}\r\n                    onChange={this.handleChange}\r\n                    defaultValue = {this.props.categories}\r\n                    clearable\r\n                />\r\n\r\n                \r\n                <Form.Group widths='equal'>\r\n                    <Form.Field>\r\n                        <p><b>Relevancy       vs.      Funny Factor</b></p>\r\n                        <Slider discrete value={this.props.score} color=\"white\" settings={slider_settings} />\r\n                    </Form.Field>\r\n                    <Form.Dropdown\r\n                        placeholder=\"Select Maturity\"\r\n                        name=\"maturity\"\r\n                        label=\"Maturity Rating\"\r\n                        selection\r\n                        clearable\r\n                        options={maturityList}\r\n                        // onChange={this.handleChange}\r\n                        // defaultValue = {this.props.score}\r\n                    />\r\n\r\n                    <Form.Dropdown\r\n                        placeholder = \"Select Joke Length\"\r\n                        name = \"size\"\r\n                        label = \"Joke Length\"\r\n                        selection\r\n                        clearable\r\n                        multiple\r\n                        options = {sizeList}\r\n                        onChange = {this.handleChange}\r\n                        defaultValue = {this.props.size}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group inline>\r\n                    <Form.Button inline center secondary type=\"submit\" size=\"large\">Find Jokes</Form.Button>\r\n                    <Form.Button center primary type=\"submit\" size=\"large\">I'm Feeling Funny!</Form.Button>\r\n                </Form.Group>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(JokeForm);\r\n","// adapted from: https://pusher.com/tutorials/consume-restful-api-react\r\n\r\nimport React from 'react'\r\nimport { Icon, Label } from 'semantic-ui-react'\r\n\r\nconst JokeResults = ({ jokes }) => {\r\n  if (jokes.length == 0) {\r\n    return (\r\n      <React.Fragment>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <center><h2>Jokes</h2></center>\r\n      {jokes.map((joke, index) => (\r\n        (index <= 20) ?\r\n        <div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            {joke.text.split('\\n').map ((item, i) => <h5 key={i}>{item}</h5>)}\r\n            <h6 className=\"card-subtitle mb-2 text-muted\">{joke.score}</h6>\r\n              {joke.categories.map((cat) => <Label>\r\n                {cat}\r\n              </Label>)}\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        </div> : null\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default JokeResults","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n// css files \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/main.css';\r\nimport './css/App.css';\r\n\r\n// images, lists\r\nimport logo from './images/operator.png';\r\n\r\n// components\r\nimport Form from './components/Form'\r\nimport JokeResults from './components/JokeResults';\r\n\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { Dimmer, Loader, Container} from 'semantic-ui-react'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isLoaded: false,\r\n      jokes: [],\r\n      typo: false, \r\n      typo_query: '',\r\n\r\n      categories: [],\r\n      score: '',\r\n      search: '', \r\n      size: '',    \r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchResults()\r\n  }\r\n\r\n  fetchResults(){ \r\n    const URLParams = new URLSearchParams(window.location.search)\r\n\r\n    const category_param = URLParams.getAll(\"categories\")\r\n    const score_param = URLParams.get(\"score\")\r\n    const search_param = URLParams.get(\"search\")\r\n    const size_param = URLParams.get(\"size\")\r\n\r\n    axios({\r\n      method: 'GET',\r\n      // url: `/api/search`,\r\n      url: `http://localhost:5000/api/search`,\r\n      params: URLParams\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          jokes: response.data.jokes,\r\n          typo: response.data.typo, \r\n          typo_query: response.data.typo_query,\r\n\r\n          categories: category_param,\r\n          score: score_param,\r\n          search: search_param, \r\n          size: size_param\r\n        })\r\n      })\r\n      .catch(err =>\r\n        console.log(err)\r\n      );\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const URLParams = new URLSearchParams(nextProps.location.search)\r\n\r\n    const category_param = URLParams.getAll(\"categories\")\r\n    const score_param = URLParams.get(\"score\")\r\n    const search_param = URLParams.get(\"search\")\r\n    const size_param = URLParams.get(\"size\")\r\n\r\n    const cat_updated = category_param.sort().toString() !== (prevState.categories).sort().toString()\r\n    return cat_updated || score_param !== prevState.score || search_param !== prevState.search || size_param !== prevState.size\r\n      ? { isLoaded: false }\r\n      : null\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.state.isLoaded === false) {\r\n      this.fetchResults();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {return (\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col>\r\n            <header className=\"App-header\">\r\n              <h1>HahaFactory:</h1>\r\n              <h2>Finding Hilarious Jokes for You</h2>\r\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n\r\n          <Form score = {this.state.score} categories = {this.state.categories} search = {this.state.search} size = {this.state.size}/>\r\n\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"jokes-col\">\r\n             {this.state.typo & this.state.typo !='' \r\n               ? <div> \r\n                <h4> We could not find any results for <b>\"{this.state.search}\"</b>. Did you mean... <b>\"{this.state.typo_query}\"</b>? </h4>\r\n                <h4> We are showing results for <b>\"{this.state.typo_query}\"</b>.</h4>\r\n                </div>\r\n               : null}\r\n             <JokeResults jokes={this.state.jokes}/> \r\n          </Col>\r\n        </Row>\r\n      </Container >\r\n      )\r\n   }\r\n   else return (\r\n      <Dimmer active inverted>\r\n        <Loader size=\"large\" >Loading</Loader>\r\n      </Dimmer>\r\n      )\r\n   }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} />  \r\n    </Switch>\r\n  </BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}