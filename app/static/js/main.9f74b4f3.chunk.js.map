{"version":3,"sources":["images/operator.png","images/size.js","images/maturity.js","components/Form.js","components/JokeResults.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","split","JokeForm","props","handleChange","e","name","value","setState","handleAdvanced","titleProps","newActive","state","isOpen","createDropDownList","list","map","element","key","text","isLoaded","cat_options","categories","search","score","sizes","maturity","displayMessage","advanced","React","createRef","handleSubmit","bind","this","cat_empty","length","score_empty","maturity_empty","size_empty","open","axios","method","url","then","response","data","catch","err","console","log","event","preventDefault","params","URLSearchParams","search_empty","append","forEach","cat","size","toString","history","push","pathname","current","scrollIntoView","behavior","block","jokes","focus","categoryList","sizeList","maturityList","maturities","slider_settings","start","min","max","step","onChange","icon","ref","Form","onSubmit","Input","placeholder","label","type","defaultValue","clearable","Accordion","Title","onClick","Icon","Dropdown","closeOnChange","multiple","selection","options","Group","widths","Field","discrete","color","settings","action","style","inline","justifyContent","alignItems","Button","secondary","primary","Component","withRouter","JokeResults","query","Fragment","joke","index","className","item","i","highlightClassName","searchWords","autoEscape","textToHighlight","Label","Popup","content","position","trigger","Rating","precision","readOnly","Number","similarity","toFixed","hoverable","Header","Content","labels","datasets","backgroundColor","hoverBackgroundColor","cos_score","jac_score","sc_score","legend","display","fontSize","App","typo","typo_query","fetchResults","URLParams","window","location","category_param","getAll","score_param","get","search_param","size_param","maturity_param","prevProps","Container","Row","Col","margin","src","logo","alt","Dimmer","active","inverted","Loader","nextProps","prevState","cat_updated","sort","size_updated","Boolean","hostname","match","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9f74b4f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/operator.23ba0e19.png\";","export default `One-Liner\nShort\nMedium\nLong`.split('\\n');","export default `PG\nPG-13`.split('\\n');","import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\n\nimport { Form, Accordion, Icon } from 'semantic-ui-react'\nimport { Slider } from \"react-semantic-ui-range\";\nimport sizes from '../images/size';\nimport maturities from '../images/maturity'\n\nclass JokeForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoaded: false, // indicates if categories have been loaded from API GET request\n            cat_options: [],\n\n            categories: this.props.categories || [],\n            search: this.props.search || '',\n            score: this.props.score || '',\n            sizes: this.props.sizes || [],\n            maturity: this.props.maturity || '',\n\n            displayMessage: false,\n            isOpen: false,\n        }\n        this.advanced = React.createRef()\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAdvanced = this.handleAdvanced.bind(this);\n    }\n\n    componentDidMount() {\n        const { categories, score, sizes, maturity, search } = this.props\n        const cat_empty = categories === null || categories.length === 0\n        const score_empty = score === null || score === \"\"\n        const maturity_empty = maturity === null || maturity === \"\"\n        const size_empty = sizes === null || sizes.length === 0\n\n        const open = !cat_empty || !score_empty || !maturity_empty || !size_empty\n\n        axios({\n            method: 'GET',\n            // url: `/api/cat-options`,\n            url: `http://localhost:5000/api/cat-options`,\n        })\n            .then((response) => {\n                this.setState({\n                    cat_options: response.data.categories,\n                    isLoaded: true,\n                    isOpen: open,\n                    categories: categories,\n                    score: score, \n                    sizes: sizes,\n                    maturity: maturity,\n                    search: search\n                })\n            })\n            .catch(err =>\n                console.log(err)\n            );\n    }\n\n    handleChange = (e, { name, value }) => {\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { search, categories, score, sizes, maturity } = this.state\n\n        const params = new URLSearchParams()\n\n        const search_empty = search === null || search === \"\"\n        const cat_empty = categories === null || categories.length === 0\n        const score_empty = score === null || score === \"\"\n        const maturity_empty = maturity === null || maturity === \"\"\n        const size_empty = sizes === null || sizes.length === 0\n\n        if ((search_empty && cat_empty && size_empty && maturity_empty) && (!score_empty)) {\n            this.setState({\n                displayMessage: true\n            })\n        } else if ((search_empty && cat_empty && size_empty && maturity_empty && score_empty)) {\n            this.setState({\n                displayMessage: true\n            })\n        }\n        else {\n            if (!search_empty) params.append(\"search\", search)\n            if (!cat_empty) {\n                categories.forEach(cat => {\n                    params.append(\"categories\", cat);\n                })\n            }\n            if (!score_empty) params.append(\"score\", score)\n            if (!maturity_empty) params.append(\"maturity\", maturity)\n            if (!size_empty) {\n                sizes.forEach(size => {\n                    params.append(\"sizes\", size);\n                })\n            }\n\n            const url = '?' + params.toString()\n            this.props.history.push({\n                pathname: '/',\n                search: url\n            })\n        }\n    }\n\n    handleAdvanced = (e, titleProps) => {\n        const { isOpen } = this.state\n        const newActive = !isOpen\n        this.setState({ isOpen: newActive })\n    }\n\n    createDropDownList = (list) => {\n        return list.map((element) =>\n            ({\n                key: element,\n                text: element,\n                value: element\n            })\n        )\n    }\n\n    focus(){\n        if (this.advanced) {\n            this.advanced.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n        };\n    }\n\n    handleLucky(event) {\n        event.preventDefault();\n        axios({\n            method: 'GET',\n            // url: `/api/cat-options`,\n            url: `http://localhost:5000/api/random`,\n        })\n            .then((response) => {\n                this.setState({\n                    jokes: response.data.jokes,\n                })\n            })\n            .catch(err =>\n                console.log(err)\n            );\n    }\n\n    componentDidUpdate() {\n        this.focus()\n    }\n\n    render() {\n        const categoryList = this.createDropDownList(this.state.cat_options)\n        const sizeList = this.createDropDownList(sizes)\n        const maturityList = this.createDropDownList(maturities)\n\n        const slider_settings = {\n            start: this.state.score || 0.25,\n            min: 0,\n            max: 0.5,\n            step: 0.125,\n            onChange: value => {\n                this.setState({\n                    score: value\n                })\n            }\n        };\n\n        const icon = this.state.isOpen ? 'chevron down' : 'chevron right'\n\n        return (\n        <div ref={this.advanced}> \n            <Form onSubmit={this.handleSubmit} size=\"large\" key=\"large\" >\n                <Form.Input\n                    placeholder=\"Enter your search\"\n                    name=\"search\"\n                    label=\"Keywords\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    defaultValue={this.state.search}\n                    clearable\n                    focus\n                />\n                < Accordion>\n                    <Accordion.Title onClick={this.handleAdvanced}>\n                        <Icon name={icon} />Advanced Search\n                    </Accordion.Title>\n                </Accordion>\n                {this.state.isOpen\n                    ? <div>\n                        < Form.Dropdown\n                            closeOnChange\n                            placeholder=\"Select Categories\"\n                            name=\"categories\"\n                            label=\"Categories\"\n                            multiple\n                            search\n                            selection\n                            options={categoryList}\n                            onChange={this.handleChange}\n                            defaultValue={this.state.categories}\n                            clearable\n                            focus\n                        />\n\n                        <Form.Group widths='equal'>\n                            <Form.Field>\n                                <p><b>Relevancy       vs.      Funny Factor</b></p>\n                                <Slider discrete color=\"white\" settings={slider_settings} />\n                            </Form.Field>\n\n                            <Form.Dropdown\n                                placeholder=\"Select Maturity\"\n                                name=\"maturity\"\n                                label=\"Maturity Rating\"\n                                selection\n                                clearable\n                                options={maturityList}\n                                onChange={this.handleChange}\n                                defaultValue={this.state.maturity}\n                                    focus\n                                     action={{\n                                        onClick: () => this.focus()\n                                    }}\n                            />\n\n                            <Form.Dropdown\n                                placeholder=\"Select Joke Length\"\n                                name=\"sizes\"\n                                label=\"Joke Length\"\n                                selection\n                                clearable\n                                multiple\n                                options={sizeList}\n                                onChange={this.handleChange}\n                                defaultValue={this.state.sizes}\n                                focus\n                            />\n                        </Form.Group>\n                    </div>\n                    : null\n                }\n                {this.state.displayMessage\n                    ?\n                    <h5 style={{ color: 'black' }}>Please provide an input for \"Keywords\", \"Categories\", \"Maturity\" or \"Joke Length\" to search.</h5>\n                    : null\n                }\n\n                <Form.Group inline style={{ justifyContent: 'center', alignItems: 'center' }}>\n                    <Form.Button secondary type=\"submit\" size=\"large\">Find Jokes</Form.Button>\n                    <Form.Button primary type=\"submit\" size=\"large\">I'm Feeling Funny!</Form.Button>\n                </Form.Group>\n            </Form >\n        </div>\n        )\n    }\n}\n\nexport default withRouter(JokeForm);\n","// adapted from: https://pusher.com/tutorials/consume-restful-api-react\n\nimport React from 'react'\nimport { Icon, Label, Popup} from 'semantic-ui-react'\nimport Highlighter from \"react-highlight-words\";\nimport Rating from '@material-ui/lab/Rating';\nimport { Doughnut } from 'react-chartjs-2';\n\n\nconst JokeResults = ({ jokes, query }) => {\n  if (jokes.length === 0) {\n    return (\n      <React.Fragment>\n      </React.Fragment>\n    )\n  }\n  return (\n    <React.Fragment>\n      {jokes.map((joke, index) => (\n        (index <= 20) ?\n        <div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {joke.text.split('\\n').map((item, i) => <h5 key={i}> <Highlighter\n              highlightClassName=\"Highlight\"\n              searchWords={query}\n              autoEscape={true}\n              textToHighlight={item}\n            /></h5>)}\n            \n              {joke.categories.map((cat) => <Label>\n                {cat}\n              </Label>)}\n              <div>\n              <Popup content={joke.score} position='right center' trigger={\n                <h6 className=\"star_hover\">\n                  <Rating className=\"rating_stars\" name=\"half-rating-read\" defaultValue={joke.score} precision={0.1} readOnly />\n                </h6>\n              }/>\n          </div>\n\n              <h6 className=\"sim_sc_display\">Similarity Score: {Number((Number(joke.similarity)*100).toFixed(1))+ \"%\"}</h6>\n              <Popup position='right center' trigger={<Icon className=\"info_icon\" color='teal' name='question circle' size='large' />} hoverable>\n                <Popup.Header>Similarity Score Breakdown</Popup.Header>\n                  <Popup.Content>\n                    <Doughnut\n                    data={\n                      {\n                        labels: ['Keywords (%)', 'Categories (%)', 'Funny Factor (%)'],\n                        datasets: [\n                          {\n                            label: 'breakdown',\n                            backgroundColor: [\n                              '#FDC144',\n                              '#FD6585',\n                              '#3DA3E8'\n                            ],\n                            hoverBackgroundColor: [\n                              '#FEDB93',\n                              '#FEBCCA',\n                              '#3DCEE8'\n                            ],\n                            data: [\n                                    Number((Number(joke.cos_score)/Number(joke.similarity)*100).toFixed(1)), \n                                    Number((Number(joke.jac_score)/Number(joke.similarity)*100).toFixed(1)), \n                                    Number((Number(joke.sc_score)/Number(joke.similarity)*100).toFixed(1))\n                                  ]\n                          } \n                        ]\n                      }\n                    }\n                    options={{\n                      legend:{\n                        display:true,\n                        position:'right',\n                        fontSize: 4\n                      }\n                    }}\n                    />\n                  </Popup.Content>\n              </Popup>\n          </div>\n        </div>\n        <br></br>\n        </div> : null\n      ))}\n    </React.Fragment>\n  )\n};\n\nexport default JokeResults","import React from 'react';\nimport axios from 'axios';\n\n// css files \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/main.css';\nimport './css/App.css';\n\n// images, lists\nimport logo from './images/operator.png';\n\n// components\nimport Form from './components/Form'\nimport JokeResults from './components/JokeResults';\n\nimport { Row, Col } from 'react-bootstrap'\nimport { Dimmer, Loader, Container, Button } from 'semantic-ui-react'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      jokes: [],\n      typo: false,\n      typo_query: '',\n      query: [],\n\n      categories: [],\n      score: '',\n      search: '',\n      sizes: [],\n      maturity: ''\n    }\n  }\n\n  componentDidMount() {\n    this.fetchResults()\n  }\n\n  fetchResults() {\n    const URLParams = new URLSearchParams(window.location.search)\n\n    const category_param = URLParams.getAll(\"categories\")\n    const score_param = URLParams.get(\"score\")\n    const search_param = URLParams.get(\"search\")\n    const size_param = URLParams.getAll(\"sizes\")\n    const maturity_param = URLParams.get(\"maturity\")\n\n    axios({\n      method: 'GET',\n      // url: `/api/search`,\n      url: `http://localhost:5000/api/search`,\n      params: URLParams\n    })\n      .then((response) => {\n        this.setState({\n          isLoaded: true,\n          jokes: response.data.jokes,\n          typo: response.data.typo,\n          typo_query: response.data.typo_query,\n          query: response.data.query,\n\n          categories: category_param,\n          score: score_param,\n          search: search_param,\n          sizes: size_param,\n          maturity: maturity_param,\n        })\n      })\n      .catch(err =>\n        console.log(err)\n      );\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const URLParams = new URLSearchParams(nextProps.location.search)\n\n    const category_param = URLParams.getAll(\"categories\")\n    const score_param = URLParams.get(\"score\")\n    const search_param = URLParams.get(\"search\")\n    const size_param = URLParams.getAll(\"sizes\")\n    const maturity_param = URLParams.get(\"maturity\")\n\n    const cat_updated = category_param.sort().toString() !== (prevState.categories).sort().toString()\n    const size_updated = size_param.sort().toString() !== (prevState.sizes).sort().toString()\n    return cat_updated || score_param !== prevState.score || search_param !== prevState.search || size_updated || maturity_param !== prevState.maturity\n      ? { isLoaded: false }\n      : null\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.isLoaded === false) {\n      this.fetchResults();\n    }\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      return (\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col>\n\n              <div inline >\n                <Button style={{ margin: '10px' }} onClick={ () => window.open(\"http://hahafactory-og.herokuapp.com/\", \"_blank\")}> First Prototype </Button>\n                <Button style={{ margin: '10px' }} onClick={() => window.open(\"http://hahafactory-v2.herokuapp.com/\", \"_blank\")}> Second Prototype </Button>\n              </div>\n              <header className=\"App-header\">\n                <h1>HahaFactory:</h1>\n                <h2>Finding Hilarious Jokes for You</h2>\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              </header>\n\n              <Form score={this.state.score} categories={this.state.categories} search={this.state.search} sizes={this.state.sizes} maturity={this.state.maturity} />\n\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"jokes-col\">\n              {this.state.typo & this.state.typo_query === ''\n                ? <div>\n                  <h4> We could not find any results for <b>\"{this.state.search}\"</b>.</h4>\n                </div>\n                : null}\n              {this.state.typo & this.state.typo_query !== ''\n                ? <div>\n                  <h4> Did you mean... <b>\"{this.state.typo_query}\"</b>? </h4>\n                  <h4> We are showing results for <b>\"{this.state.typo_query}\"</b>.</h4>\n                </div>\n                : null}\n              <JokeResults jokes={this.state.jokes} query={this.state.query} />           </Col>\n          </Row>\n        </Container >\n      )\n    }\n    else return (\n      <Dimmer active inverted>\n        <Loader size=\"large\" >Loading</Loader>\n      </Dimmer>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" component={App} />  \n    </Switch>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}